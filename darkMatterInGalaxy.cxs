' TODO : avoir un prégraphe en jpg ?
' TODO : avoir des dimensions mieux adaptées aux téléphones ? Forcer l'orientation (en html5) ?
#rem
Jean-Baptiste :
Peut-être rajouter quelques infos supplémentaires un peu plus pointues dans explications. Par exemple, comment est distribuée la matière noire dans la galaxie ? 
ou pourquoi la vitesse observée croit puis décroit avec avec le rayon avec le point de transition autour de 10000 a.l. ?
#end rem

Import mojo
Import cerberus.math
Import fontmachine

Import graph
Import utils
Import localization
Import star

#MOJO_AUTO_SUSPEND_ENABLED=False   ' Allows that the animation continue if the window loses the focus

Const UPDATE_RATE = 60

Global drawVelocities:Bool = False    ' To draw or not the velocity aboveOrhNottars
Global spiralArms:Bool = False        ' To draw many stars with spiral arms
Global starShape = 1                 ' 1 is a jpg picture, 2 is a circle, 3 is a point

Global pixelTokpc:Float   ' The conversion from pixel to kp
Global scaleGalaxy:Float  ' To rescale the galaxy picture
Global scaleGalaxyInit:Float  ' The scale of the galaxy picture when zoomed at the maximum
Global galaxyWidthPercent:Float  ' The size of the galaxy in percent (0-1)
Global scaleStar:Float    ' To rescale the star picture
Global centerGalaxyX, centerGalaxyY   ' The center of the galaxy
Global starImage:Image
Global DMFraction:Int                    ' Fraction of dark matter
Global DMFractionReference:Int = 85      ' Fraction of dark matter in the Galaxy (the right answer!)
Global foundGoodFraction:Bool
Global DMSliderValue:Int    
Global isPaused:Bool                     ' If the rotation is paused
'Global font1:BitmapFont
Global font2:BitmapFont

Global loc:Localization              ' To translate easily the text




'------------------------------------------------'
'-------------- Main function -------------------'
'------------------------------------------------'
Function Main()
	New DarkMatterInGalaxy	
End




'------------------------------------------------'
'-------------- The main application ------------'
'------------------------------------------------'
Class DarkMatterInGalaxy Extends App

	Const GALAXY_SIZE:Float = 25.0    ' The size of the galaxy in kpc
	Const HALO_SIZE:Float = 250.0      ' The size of the halo in kpc
	Const STEP_WIDTH:Float = 0.01  ' The step to zoom or unzoom
	Const GALAXY_WIDTH_PERCENT_MAX:Float = 0.62  ' The max size of the galaxy in percent of the width screen
	Const GALAXY_WIDTH_PERCENT_MIN:Float = 0.07  ' And the min

	Field indexLoadingImage:Int = 0
	Field indexMaxLoadingImage:Int
	Field galaxyImage:Image
	Field haloImage:Image
	Field scaleHalo:Float
	Field playImage:Image
	Field pauseImage:Image
	Field backImage:Image
	Field scaleButton:Float
	Field buttonBackX:Int, buttonBackY:Int    ' The position of the rewind and play/pause button
	Field buttonPlayX:Int, buttonPlayY:Int
	Field buttonSizeX:Int, buttonSizeY:Int
	Field velocityCheckBox:CheckBox
	Field spiralCheckBox:CheckBox
	Field explanationCheckBox:CheckBox
	Field haloCheckBox:CheckBox

	Field galaxyWidthInPixel:Int  ' The size of the galaxy in pixels
	Field stepWidth:Float         ' To zoom/unzoom on the galaxy and the halo
	
	Field haloSize:Int = 300      ' Size of the halo in kpc

  	' Parameter for the congratulation panel
	Field alphaCongratulation:Float = 0
	Field yCongratulation:Float
	Field yMinCongratulation:Int   ' Starting y
	Field yMaxCongratulation:Int   ' Ending y

	Field stars := New List<Star>
	
	Field graphVelocity:Graph
		
	Field appletJustStarted:Bool = True
	
	
	Method OnCreate()
		
		SetUpdateRate(UPDATE_RATE)		

		' Maximum index of images to load in LoadImageIndex
		indexMaxLoadingImage = 5
		
		' Text
		loc = New Localization(Localization.FRENCH)
	End
	
	
	Method LoadImageIndex(index:Int)
		' Set correctly indexMaxLoadingImage to the bigger index
		If index = 1 Then
			playImage = LoadImage("play.png", 1, Image.MidHandle)
			pauseImage = LoadImage("pause.png", 1, Image.MidHandle)
			backImage = LoadImage("back.png", 1, Image.MidHandle)
		Endif			
		If index = 2  galaxyImage = LoadImage("m74_gemini.jpg", 1, Image.MidHandle)
		If index = 3  haloImage = LoadImage("halo.jpg", 1, Image.MidHandle)
		If index = 4  starImage = LoadImage("star.png", 1, Image.MidHandle)
		' Load fonts
		'If index = 5 Then
		'	font1 = New BitmapFont("Fonts/ZooSmall.txt", True)
		'	font1.DrawBorder = True
		'	font1.DrawShadow = True
		'Endif
		If index = 5
			font2 = New BitmapFont("Fonts/CleanWhite.txt", True)
			font2.DrawBorder = True
			font2.DrawShadow = True 
		Endif
	End
	
	
	Method CreateApplet()	
		DMFraction = 0
		DMSliderValue = DMFraction
		
		stepWidth = STEP_WIDTH
		
		' Buttons
		scaleButton = 0.7
		buttonSizeX = playImage.Width()
		buttonSizeY = playImage.Height()		
		buttonBackX = 0.1 * DeviceWidth()
		buttonBackY = DeviceHeight()*0.84
		buttonPlayX = 0.18 * DeviceWidth()
		buttonPlayY = DeviceHeight()*0.84
		
		' CheckBoxes
		explanationCheckBox = New CheckBox(loc.GetSentence(11), 0.1 * DeviceWidth(), 0.95 * DeviceHeight())

		haloCheckBox = New CheckBox(loc.GetSentence(14), 0.4 * DeviceWidth(), 0.95 * DeviceHeight())

		velocityCheckBox = New CheckBox(loc.GetSentence(5), 0.75 * DeviceWidth(), 0.95 * DeviceHeight())
		velocityCheckBox.Check(drawVelocities)
		
		'spiralCheckBox = New CheckBox("Bras spiraux", 0.75 * DeviceWidth(), 350)
		'spiralCheckBox.Check(spiralArms)
		
		'galaxyImage = LoadImage("m74_gemini.jpg", 1, Image.MidHandle)
		' We want the galaxy to occupy x% of DeviceWidth()
		galaxyWidthPercent = GALAXY_WIDTH_PERCENT_MAX
		galaxyWidthInPixel = galaxyWidthPercent * DeviceWidth()
		scaleGalaxy =  Float(galaxyWidthInPixel) / Float(galaxyImage.Width())
		scaleGalaxyInit = scaleGalaxy
		' Compute the center of the Galaxy
		centerGalaxyX = galaxyWidthInPixel / 2
		centerGalaxyY = galaxyImage.Height() * scaleGalaxy / 2

		' Compute the factor to convert from pixel distance to kpc
		' The width of the image is equal to 25 kpc
		pixelTokpc = GALAXY_SIZE / galaxyWidthInPixel	

		'haloImage = LoadImage("halo.jpg", 1, Image.MidHandle)
		scaleHalo = (HALO_SIZE / pixelTokpc) / Float(haloImage.Width()) * 1.3  ' 1.3 because of the black margin
		
		'starImage = LoadImage("star.png", 1, Image.MidHandle)
		scaleStar = 0.3
		
		' Create the graph
		graphVelocity = New Graph(0.7*DeviceWidth(), DeviceHeight()*0.5, loc.GetSentence(6), loc.GetSentence(7), DeviceWidth()*0.28, DeviceHeight()*0.3)
		graphVelocity.SetMaxX(12 * 3.261)  ' Max of the x axis is 12 kpc (converted in light years)
		If (starShape = 1)  graphVelocity.SetImage(starImage, scaleStar)
		' Create the reference points
		Local DMFractionTemp:Int = DMFraction
		DMFraction = DMFractionReference  ' The fraction of DM in the Galaxy
		For Local r:Float = 1 To 12
			Local velocity:Float = ComputeStarVelocity(r)
			' Convert from kpc to thousand of light years
			Local rInLightYear:Float = r * 3.261
			graphVelocity.AddPointRef(rInLightYear, velocity)
		Next
		DMFraction = DMFractionTemp
		
		' Load fonts
		'font1 = New BitmapFont("Fonts/ZooSmall.txt", True)
		'font1.DrawBorder = True
		'font1.DrawShadow = True 
		'font2 = New BitmapFont("Fonts/CleanWhite.txt", True)
		'font2.DrawBorder = True
		'font2.DrawShadow = True 
		
		CreateStars()
		
		' Set the initial position of the congratulation panel (out of the screen)
		yMinCongratulation = -DeviceHeight()*0.08
		yMaxCongratulation = 0
		yCongratulation = yMinCongratulation
		
		DeltaTimer.Init(UPDATE_RATE)
	End Method


	' Create all the stars	
	Method CreateStars()
		If (Not spiralArms) Then
			For Local r:Float = 1 To 11
				'stars.AddLast(New Star(Rnd(360), r))
				stars.AddLast(New Star(0, r))
			Next
		Endif
	
		If (spiralArms) Then
			' First arm
			For Local angle:Float = 1 To 6.28 Step 0.004
				'If (Rnd(0,100) > 1)  Continue 
				' Equation of a logarithmic spiral r = a^theta
				stars.AddLast(New Star(angle, Pow(3, 0.35 * Rnd(0.9,1.1) * (6.28 - angle))))
			Next

			' Second arm
			For Local angle:Float = 1 To 6.28 Step 0.004
				' Equation of a logarithmic spiral r = a^theta
				stars.AddLast(New Star(angle + 3.14, Pow(3, 0.35 * Rnd(0.9,1.1) * (6.28 - angle))))
			Next
			
			' Other stars not in the arms
			For Local i:int = 1 To 1000
				stars.AddLast(New Star(Rnd(360), Rnd(1,3)))
			Next
			For Local i:Int = 1 To 1000
				stars.AddLast(New Star(Rnd(360), Rnd(3,11)))
			Next
			
#rem	
			For Local angle:Float = 1 To 6.28 Step 0.2
				' Equation of a logarithmic spiral r = a^theta
				'stars.AddLast(New Star(angle + 1.57, Pow(3, 0.35 * (6.28 - angle))))
			Next
			
			For Local angle:Float = 1 To 360 Step 2
				' Equation of a logarithmic spiral r = a^theta
				'stars.AddLast(New Star(angle + 4.71, Pow(3, 0.35 * (6.28 - angle))))
			Next
#end
		Endif
	End Method
	
	
	Method OnUpdate()
	
		If (indexLoadingImage <= indexMaxLoadingImage)  Return 
		
		DeltaTimer.Update()
		
		#rem
		If (KeyHit(KEY_ENTER)) Then
		test = test + 1
		If test > 3 test = 1
		If test = 1 Then font = New BitmapFont("Fonts/SportsFont.txt", True)
		If test = 2 Then font = New BitmapFont("Fonts/CleanWhite.txt", True)
		If test = 3 Then font = New BitmapFont("Fonts/ZooSmall.txt", True)
		font.DrawBorder = True
		font.DrawShadow = True
		Endif
		#end

		
		' Check pause button
		If (KeyHit(KEY_SPACE))  isPaused = Not isPaused
		If (CheckButtonTouched(buttonPlayX, buttonPlayY, buttonSizeX*scaleButton, buttonSizeY*scaleButton))  isPaused = Not isPaused
		' Check rewind button
		If (CheckButtonTouched(buttonBackX, buttonBackY, buttonSizeX*scaleButton, buttonSizeY*scaleButton) And Not isPaused) Then
			stars.Clear()
			CreateStars()
		Endif
	
		' Check... checkboxes
		velocityCheckBox.Update()
		drawVelocities = velocityCheckBox.isChecked()
		explanationCheckBox.Update()
		haloCheckBox.Update()
		If haloCheckBox.isChecked() Then
			stepWidth = -STEP_WIDTH ' Unzoom
			velocityCheckBox.SetVisible(False)
		Else
			stepWidth = STEP_WIDTH ' Zoom
			velocityCheckBox.SetVisible(True)			
		Endif

		'spiralCheckBox.Update()
		'spiralArms = spiralCheckBox.isChecked()
		'If spiralCheckBox.JustClicked() Then
		'	stars.Clear()
		'	CreateStars()
		'Endif
		If spiralArms Then
			drawVelocities = False
			starShape = 3
		Else
			starShape = 1
		Endif
			
	
		' Check if the slider was released
		Local DMFractionChanged:Bool = False
		If (DMSliderValue <> DMFraction And Not TouchDown)
			DMFraction = DMSliderValue
			DMFractionChanged = True
		Endif
		
		If (KeyHit(KEY_LEFT))  Then
			DMSliderValue -= 1
			If DMSliderValue < 0  DMSliderValue = 0
			DMFractionChanged = True
		Endif	
		If (KeyHit(KEY_RIGHT))  Then
			DMSliderValue += 1
			If DMSliderValue > 99  DMSliderValue = 99
			DMFractionChanged = True
		Endif	
			
		' Update the scale of the galaxy
		galaxyWidthPercent += stepWidth * DeltaTimer.factor
		If galaxyWidthPercent > GALAXY_WIDTH_PERCENT_MAX Then galaxyWidthPercent = GALAXY_WIDTH_PERCENT_MAX
		If galaxyWidthPercent < GALAXY_WIDTH_PERCENT_MIN Then galaxyWidthPercent = GALAXY_WIDTH_PERCENT_MIN		
		galaxyWidthInPixel = galaxyWidthPercent * DeviceWidth()
		scaleGalaxy =  Float(galaxyWidthInPixel) / Float(galaxyImage.Width())	
		' Compute the factor to convert from pixel distance to kpc
		' The width of the image is equal to 25 kpc
		pixelTokpc = GALAXY_SIZE / galaxyWidthInPixel

		' And of the halo
		scaleHalo = (HALO_SIZE / pixelTokpc) / Float(haloImage.Width()) * 1.3 ' 1.3 because of the black margin
			
		' Update the stars
		For Local star := Eachin stars
			star.Update(isPaused)
			If (DMFractionChanged) Then star.ComputeVelocity()
		Next
		
		' Update the graph for the star velocity
		If (DMFractionChanged Or appletJustStarted) Then
			foundGoodFraction = False
			If (DMFraction = DMFractionReference)  foundGoodFraction = True
			graphVelocity.RemoveAllPoints()
			Local maxVelocity:Float = -1
			For Local r:Float = 1 To 12
				Local velocity:Float = ComputeStarVelocity(r)
				If (velocity > maxVelocity)  maxVelocity = velocity
				' Convert from kpc to thousand of light years
				Local rInLightYear:Float = r * 3.261
				graphVelocity.AddPoint(rInLightYear, velocity)
			Next
			graphVelocity.SetMaxY(maxVelocity * 1.1)
		Endif
		
		' Update the apparition of the congratulation panel
		If (foundGoodFraction) Then
			yCongratulation += 4 * DeltaTimer.factor
			alphaCongratulation += 0.1
		Else
			yCongratulation -= 4 * DeltaTimer.factor
			alphaCongratulation -= 0.1
		Endif
		If (yCongratulation < yMinCongratulation)  yCongratulation = yMinCongratulation
		If (yCongratulation > yMaxCongratulation)  yCongratulation = yMaxCongratulation
		If (alphaCongratulation < 0)  alphaCongratulation = 0
		If (alphaCongratulation > 1)  alphaCongratulation = 1
		
		appletJustStarted = False
	End
	
	
	Method OnRender()
				
		Cls

		' To call once to create the halo and make a screen copy of it
		' CreateHalo()
		' Return()
			
		' Display loading screen first
		If (indexLoadingImage <= indexMaxLoadingImage) Then				
			Local fractionLoading:Int = indexLoadingImage / indexMaxLoadingImage * 100
			Slider(DeviceWidth()*0.35, DeviceHeight()*0.5, DeviceWidth()*0.3, 20, fractionLoading, Null, 1)
			
			LoadImageIndex(indexLoadingImage)
			indexLoadingImage += 1
			If (indexLoadingImage > indexMaxLoadingImage)  CreateApplet()
			Return
		Endif		

							
		' Draw the galaxy
		DrawImage(galaxyImage, centerGalaxyX, centerGalaxyY, 0, scaleGalaxy, scaleGalaxy)

		If haloCheckBox.isChecked() Then
			SetAlpha Float(DMSliderValue) / 100.0
			DrawImage(haloImage, centerGalaxyX, centerGalaxyY, 0, scaleHalo, scaleHalo)
			SetAlpha 1
			If (DMFraction > 20)  DrawTextFont(font2, loc.GetSentence(15), DeviceWidth()*0.34, DeviceHeight()*0.7, 0.8, True)
		Endif
		
		' Draw the stars
		For Local star := Eachin stars
			star.Draw()
		Next

		SetBlend AlphaBlend
			
		' The title
		'DrawHUD(30, 10, DeviceWidth()*0.65, DeviceHeight()*0.18)
		'DrawTextFont(font1, loc.GetSentence(1), DeviceWidth*0.35, 18, 1.0, True)
		'DrawTextFont(font1, loc.GetSentence(2), DeviceWidth*0.35, 50, 0.8, True)


		' The HUD with the check box	
		DrawHUD(0, DeviceHeight()*0.9, DeviceWidth(), DeviceHeight()*0.1+1)
		' Draw the checkbox
		If Not spiralArms Then velocityCheckBox.Draw()
		explanationCheckBox.Draw()
		haloCheckBox.Draw()
		'spiralCheckBox.Draw()
		
		' The HUD with the buttons	
		DrawHUD(0, DeviceHeight()*0.78 + 2, DeviceWidth(), DeviceHeight()*0.12)

		' Draw the buttons
		DrawImage(backImage, buttonBackX, buttonBackY, 0, scaleButton, scaleButton)
		If (Not isPaused) Then
			DrawImage(pauseImage, buttonPlayX, buttonPlayY, 0, scaleButton, scaleButton)
		Else
			DrawImage(playImage, buttonPlayX, buttonPlayY, 0, scaleButton, scaleButton)
		Endif	
		
		' Draw the slider
		DMSliderValue = Slider(0.5*DeviceWidth(), DeviceHeight()*0.83, DeviceWidth()*0.45, 20, DMSliderValue, Null, 2)

		
		' Draw the graph
		'DrawHUD(DeviceWidth()*0.63, DeviceHeight()*0.55, DeviceWidth()*0.365, DeviceHeight()*0.43)
		graphVelocity.Draw()
		
		' YES !
		If (yCongratulation > yMinCongratulation) Then
			alphaCongratulation = 1.0  ' No effect on alpha right now
			DrawHUD(DeviceWidth()*0.4, yCongratulation, DeviceWidth() * 0.2, DeviceHeight()*0.08, alphaCongratulation)
			DrawTextFont(font2, loc.GetSentence(8), DeviceWidth()*0.5, DeviceHeight()*0.01 + yCongratulation, 1.2, True, False, alphaCongratulation)
		Endif
		
		' Explanations
		If explanationCheckBox.isChecked() Then
			DrawHUD(DeviceWidth()*0.15, DeviceHeight()*0.05, DeviceWidth()*0.7, DeviceHeight()*0.7, 0.8)
			DrawTextFont(font2, loc.GetSentence(12), DeviceWidth*0.5, DeviceHeight()*0.1, 0.8, True)
		Endif
				
		'DrawTextFont(font2, "FPS = " + DeltaTimer.fps, DeviceWidth()*0.9, 10, 0.7)
				
	End
End




